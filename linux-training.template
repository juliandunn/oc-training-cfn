{
  "AWSTemplateFormatVersion" : "2010-09-09",

  "Description" : "Amazon CloudFormation template for creating N training instances in an autoscaling group.",

  "Parameters" : {
    "InstanceType" : {
      "Description" : "EC2 instance type",
      "Type" : "String",
      "Default" : "m1.small",
      "AllowedValues" : [ "t1.micro","m1.small","m1.medium","m1.large","m1.xlarge","m2.xlarge","m2.2xlarge","m2.4xlarge","m3.xlarge","m3.2xlarge","c1.medium","c1.xlarge","cc1.4xlarge","cc2.8xlarge","cg1.4xlarge"],
      "ConstraintDescription" : "must be a valid EC2 instance type."
    },
    
    "NumberOfStudents": {
      "Description": "Number of students in the class",
      "Type": "String",
      "Default": "1",
      "AllowedPattern": "(\\d{1,2})"
    },

    "KeyName" : {
      "Description" : "Name of an existing EC2 KeyPair to enable SSH access to the instances",
      "Type" : "String"
    },

    "SSHLocation" : {
      "Description" : "The IP address range that can be used to SSH to the EC2 instances",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "0.0.0.0/0",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid IP CIDR range of the form x.x.x.x/x."
   }
    
  },

  "Mappings" : {
    "AWSInstanceType2Arch" : {
      "t1.micro"    : { "Arch" : "64" },
      "m1.small"    : { "Arch" : "64" },
      "m1.medium"   : { "Arch" : "64" },
      "m1.large"    : { "Arch" : "64" },
      "m1.xlarge"   : { "Arch" : "64" },
      "m2.xlarge"   : { "Arch" : "64" },
      "m2.2xlarge"  : { "Arch" : "64" },
      "m2.4xlarge"  : { "Arch" : "64" },
      "m3.xlarge"   : { "Arch" : "64" },
      "m3.2xlarge"  : { "Arch" : "64" },
      "c1.medium"   : { "Arch" : "64" },
      "c1.xlarge"   : { "Arch" : "64" },
      "cc1.4xlarge" : { "Arch" : "64HVM" },
      "cc2.8xlarge" : { "Arch" : "64HVM" },
      "cg1.4xlarge" : { "Arch" : "64HVM" }
    },

    "AWSRegionArch2AMI" : {
      "ap-northeast-1" : { "32" : "ami-7f3da67e", "64" : "ami-0733a806", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-1" : { "32" : "ami-f21045a0", "64" : "ami-42134610", "64HVM" : "NOT_YET_SUPPORTED" },
      "ap-southeast-2" : { "32" : "ami-a38b1799", "64" : "ami-c98b17f3", "64HVM" : "NOT_YET_SUPPORTED" },
      "eu-west-1"      : { "32" : "ami-e21afa95", "64" : "ami-861bfbf1", "64HVM" : "NOT_YET_SUPPORTED" },
      "sa-east-1"      : { "32" : "ami-19ac0a04", "64" : "ami-2bac0a36", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-east-1"      : { "32" : "ami-1fc29e76", "64" : "ami-5ffaa636", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-1"      : { "32" : "ami-aadaedef", "64" : "ami-4ad8ef0f", "64HVM" : "NOT_YET_SUPPORTED" },
      "us-west-2"      : { "32" : "ami-0a059c3a", "64" : "ami-66049d56", "64HVM" : "NOT_YET_SUPPORTED" }
    }
    },

  "Resources" : {

    "CfnUser" : {
      "Type" : "AWS::IAM::User",
      "Properties" : {
        "Path": "/",
        "Policies": [ {
          "PolicyName": "root",
          "PolicyDocument": { "Statement": [ {
            "Effect":"Allow",
            "Action":"cloudformation:DescribeStackResource",
            "Resource":"*"
          } ] }
        } ]
      }
    },

    "AccessKey" : {
      "Type" : "AWS::IAM::AccessKey",
      "Properties" : {
        "UserName" : { "Ref" : "CfnUser" }
      }
    },

    "TrainingServerGroup" : {
      "Type" : "AWS::AutoScaling::AutoScalingGroup",
      "Properties" : {
        "AvailabilityZones" : { "Fn::GetAZs" : "" },
        "LaunchConfigurationName" : { "Ref" : "LaunchConfig" },
        "MinSize" : "1",
        "MaxSize" : "100",
        "DesiredCapacity" : { "Ref" : "NumberOfStudents" }
      }
    },

    "LaunchConfig" : {
      "Type" : "AWS::AutoScaling::LaunchConfiguration",
      "Metadata" : {
        "Comment1" : "Launch training instances",
        "AWS::CloudFormation::Init": {
          "packages": {
            "apt": {
              "ntp": []
            }
          },
          "services" : {
            "sysvinit" : {
              "ntp" : {
                "enabled" : "true",
                "ensureRunning" : "true"
              },
              "ssh" : {
                "enabled" : "true",
                "ensureRunning" : "true"
              }
            }
          }
        }
      },
      "Properties" : {
        "KeyName" : { "Ref" : "KeyName" },
        "ImageId" : { "Fn::FindInMap" : [ "AWSRegionArch2AMI", { "Ref" : "AWS::Region" },
                    { "Fn::FindInMap" : [ "AWSInstanceType2Arch", { "Ref" : "InstanceType" }, "Arch" ] } ] },
        "UserData" : { "Fn::Base64" : { "Fn::Join" : ["", [
          "#!/bin/bash -v\n",

          "function error_exit\n",
          "{\n",
          "  cfn-signal -e 1 -r \"$1\" '", { "Ref" : "WaitHandle" }, "'\n",
          "  exit 1\n",
          "}\n",

          "apt-get update\n",
          "apt-get -y install python-setuptools\n",
          "easy_install https://s3.amazonaws.com/cloudformation-examples/aws-cfn-bootstrap-latest.tar.gz\n",
          "cfn-init -v",
          " -s ", { "Ref" : "AWS::StackName" }, " -r LaunchConfig ",
          " --access-key ", { "Ref" : "AccessKey" },
          " --secret-key ", {"Fn::GetAtt": ["AccessKey", "SecretAccessKey"]},
          " --region     ", { "Ref" : "AWS::Region" }, " || error_exit 'Failed to run cfn-init'\n",

          "# Note: Cannot use regular CloudFormation user resource in launchconfig since it creates users with shell /sbin/nologin and you can't change it... fail\n",
          "useradd -m -s /bin/bash -p '$6$K6vnwq7x$snHX/PQTVxkQJCSb5xUCMQZLnnyDLoJFG5OQb6ReIy2PiKEz0x0dvOEbY29VWp5o65DIucJmYFWK58aMoidzg1' opscode\n",
          "echo 'opscode ALL=(ALL) NOPASSWD: ALL' >> /etc/sudoers\n",
          "perl -p -i -e 's/PasswordAuthentication no/PasswordAuthentication yes/g' /etc/ssh/sshd_config\n",
          "service ssh restart\n",

          "# If all went well, signal success\n",
          "cfn-signal -e $? -r 'training instance' '", { "Ref" : "WaitHandle" }, "'\n"
        ]] } },
        "SecurityGroups" : [ { "Ref" : "InstanceSecurityGroup" } ],
        "InstanceType" : { "Ref" : "InstanceType" }
      }
    },

    "WaitHandle" : {
      "Type" : "AWS::CloudFormation::WaitConditionHandle"
    },

    "WaitCondition" : {
      "Type" : "AWS::CloudFormation::WaitCondition",
      "DependsOn" : "LaunchConfig",
      "Properties" : {
        "Handle" : {"Ref" : "WaitHandle"},
        "Timeout" : "600"
      }
    },

    "InstanceSecurityGroup" : {
      "Type" : "AWS::EC2::SecurityGroup",
      "Properties" : {
        "GroupDescription" : "Enable training access on the configured ports",
        "SecurityGroupIngress" : 
          [ { "IpProtocol" : "tcp", "FromPort" : "22", "ToPort" : "22", "CidrIp" : { "Ref" : "SSHLocation"} },
            { "IpProtocol" : "tcp", "FromPort" : "80", "ToPort" : "90", "CidrIp" : "0.0.0.0/0"} ]
      }
    }
  }
}
